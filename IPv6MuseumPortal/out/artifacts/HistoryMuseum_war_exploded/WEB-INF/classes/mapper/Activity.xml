<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 定义对应的名空间,避免命名冲突。事实上可以随便定义，例如abc,只要在应用中不要出现冲突即可.namespace目前有2种定义方式， 1、使用ibatis的定义方法，这里是实体类的全名；2、使用Mapper接口的全名，新用法 -->
<mapper namespace="museum.dao.ActivityDao">
    <select id="find" resultType="Activity">
		SELECT Activity_id,Activity_Type_id,Activity_title,Activity_context,Activity_image,
		Activity_abstract,Activity_time,Activity_time_start,Activity_time_end,Activity_state,
		Activity_top
		FROM activity order by Activity_time limit 4
	</select>

    <select id="findById" resultType="Activity">
		SELECT Activity_id,Activity_Type_id,Activity_title,Activity_context,Activity_image,
		Activity_abstract,Activity_time,Activity_time_start,Activity_time_end,Activity_state,
		Activity_top
		FROM activity where Activity_id=#{activityId};
	</select>

    <select id="findAll" resultType="Activity">
		SELECT Activity_id,Activity_Type_id,Activity_title,Activity_context,Activity_image,
		Activity_abstract,Activity_time,Activity_time_start,Activity_time_end,Activity_state,
		Activity_top
		FROM activity
	</select>

	<select id="findThreeActivity" resultType="Activity">
		SELECT Activity_id,Activity_Type_id,Activity_title,Activity_context,Activity_image,
		Activity_abstract,Activity_time,Activity_time_start,Activity_time_end,Activity_state,
		Activity_top
		FROM activity order by Activity_time DESC limit 3
	</select>

    <!--//分页查询-->
    <select id="findPageData" resultType="Activity">
		SELECT Activity_id,Activity_Type_id,Activity_title,Activity_context,Activity_image,
		Activity_abstract,Activity_time,Activity_time_start,Activity_time_end,Activity_state,
		Activity_top
		FROM activity order by Activity_time limit #{start},#{size}
	</select>


	<select id="findPageDataOne" resultType="Activity">
		SELECT Activity_id,Activity_Type_id,Activity_title,Activity_context,Activity_image,
		Activity_abstract,Activity_time,Activity_time_start,Activity_time_end,Activity_state,
		Activity_top
		FROM activity where Activity_Type_id=#{type} order by Activity_time limit #{start},#{size}
	</select>

	<select id="getRowCount" resultType="int">
		SELECT count(*) FROM activity
	</select>

	<update id="update" parameterType="Activity">
        UPDATE activity
            SET
            Activity_Type_id=#{activity.activityType.activityTypeId},
            Activity_title=#{activity.activityType.activityTypeName},
            Activity_context=#{activity.activityContext}, Activity_image=#{activity.activityImage},
            Activity_abstract=#{activity.activityAbstract}, Activity_time=#{activity.activityTime},
            Activity_time_start=#{activity.activityTimeStart},Activity_time_end=#{activity.activityTimeEnd},
            Activity_state=#{activity.activityState},Activity_top=#{activity.activityTop}
          WHERE Activity_id=#{activity.activityId}
    </update>

	<update id="updateImage" parameterType="Activity">
        UPDATE activity
            SET
            Activity_image=#{activity.activityImage}
          WHERE Activity_id=#{activity.activityId}
    </update>

	<insert id="save" parameterType="Activity">
        insert activity (Activity_Type_id,Activity_title,Activity_context,Activity_image,Activity_abstract,Activity_time
			  ,Activity_time_start,Activity_time_end,Activity_state,Activity_top)
			  value (#{activity.activityType.activityTypeId},#{activity.activityType.activityTypeName},#{activity.activityContext}
			  ,#{activity.activityImage},#{activity.activityAbstract},#{activity.activityTime},#{activity.activityTimeStart}
			  ,#{activity.activityTimeEnd},#{activity.activityState},#{activity.activityTop})
	</insert>

	<delete id="delete" parameterType="Activity">
         delete from activity WHERE Activity_id=#{activityId}
	</delete>
</mapper>